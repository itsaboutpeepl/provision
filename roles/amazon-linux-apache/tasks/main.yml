---
- name: Set hostname
  become: true
  hostname:
    name: "{{ inventory_hostname }}"
    use: redhat

- name: Install Amazon Linux Extras
  become: yes
  yum:
    name: amazon-linux-extras
    state: installed
    lock_timeout: 180

- name: Install Apache
  become: yes
  yum:
    name: httpd
    state: installed
    lock_timeout: 180

- name: Start Apache
  become: yes
  systemd:
    state: started
    name: httpd

- name: Set Apache to start at boot
  become: yes
  systemd:
    enabled: yes
    name: httpd

- name: "Add user '{{ ansible_user }}' to 'apache' group"
  become: yes
  user:
    name: "{{ ansible_user }}"
    groups: apache
    append: yes

- name: "Ensure everything in /var/www belongs to '{{ ansible_user }}:apache'"
  become: yes
  file:
    path: /var/www
    state: directory
    recurse: yes
    owner: "{{ ansible_user }}"
    group: apache

- name: Ensure directories in /var/www have 2775 permission
  become: yes
  file:
    path: /var/www
    state: directory
    recurse: yes
    mode: u=rwX,g=srX,o=rX

- name: Create production directory in /var/www
  file:
    path: "/var/www/production"
    state: directory

- name: Create staging directory in /var/www
  file:
    path: "/var/www/staging"
    state: directory
  when: staging_domain is defined

# https://aws.amazon.com/premiumsupport/knowledge-center/ec2-enable-epel/
# https://unix.stackexchange.com/questions/560024
- name: Add EPEL repository to yum (for Lets Encrypt)
  become: yes
  yum:
    name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    state: installed
    lock_timeout: 180

- name: Install mod_ssl
  become: yes
  yum:
    name: mod_ssl
    state: installed
    lock_timeout: 180
  notify:
    - Restart Apache

- name: Copy Apache configuration into place
  become: yes
  template:
    src: 200-default.conf.j2
    dest: /etc/httpd/conf.d/200-default.conf
    force: no
  notify:
    - Restart Apache

- name: Install certbot
  become: yes
  yum:
    name:
    - certbot
    - python2-certbot-apache
    state: installed
    lock_timeout: 180
  notify:
    - Restart Apache

- set_fact:
    certbot_production_aliases: "-d {{ production_domain_aliases | join(' -d ') }}"
  when: production_domain_aliases is defined

# https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/SSL-on-amazon-linux-2.html
- name: Create and install SSL certificate for production domain
  become: yes
  command: "certbot --non-interactive --agree-tos --apache -d {{ production_domain }} {{ certbot_production_aliases | default('') }} --email {{ ssl_contact_email }} --redirect"
  args:
    creates: "/etc/letsencrypt/live/{{ production_domain }}/fullchain.pem"

- set_fact:
    certbot_staging_aliases: "-d {{ staging_domain_aliases | join(' -d ') }}"
  when: staging_domain_aliases is defined

- name: Create and install SSL certificate for staging domain
  become: yes
  command: "certbot --non-interactive --agree-tos --apache -d {{ staging_domain }} {{ certbot_staging_aliases | default('') }} --email {{ ssl_contact_email }} --redirect"
  when: staging_domain is defined
  args:
    creates: "/etc/letsencrypt/live/{{ staging_domain }}/fullchain.pem"

- name: Ensure twice daily cron job for SSL certificate check
  become: yes
  cron:
    name: "certbot renew"
    minute: "0"
    hour: "0,12"
    job: "certbot renew --no-self-upgrade"
    user: root
  notify:
    - Restart Cron daemon
